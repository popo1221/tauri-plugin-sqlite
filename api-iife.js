if("__TAURI__"in window){var __TAURI_PLUGIN_TAURI_PLUGIN_SQLITE__=function(t){"use strict";async function n(t,n={},a){return window.__TAURI_INTERNALS__.invoke(t,n,a)}"function"==typeof SuppressedError&&SuppressedError;class a{constructor(t){this.path=t}static async load(t){const e=await n("plugin:sqlite|load",{db:t});return new a(e)}static get(t){return new a(t)}async execute(t,a){const[e,s]=await n("plugin:sqlite|execute",{db:this.path,query:t,values:a??[]});return{lastInsertId:s,rowsAffected:e}}async select(t,a){return await n("plugin:sqlite|select",{db:this.path,query:t,values:a??[]})}async close(t){return await n("plugin:sqlite|close",{db:t})}}return t.Database=a,t.beginTransaction=async function(t){return await n("plugin:sqlite|sql_transaction_begin",{db:t.path})},t.commitTransaction=async function(t){return await n("plugin:sqlite|sql_transaction_commit",{transactionInstanceId:t})},t.executeTransaction=async function(t,a,e){const[s,i]=await n("plugin:sqlite|sql_transaction_execute",{transactionInstanceId:t,query:a,values:e??[]});return{lastInsertId:i,rowsAffected:s}},t.rollbackTransaction=async function(t){return await n("plugin:sqlite|sql_transaction_rollback",{transactionInstanceId:t})},t.selectTransaction=async function(t,a,e){return await n("plugin:sqlite|sql_transaction_select",{transactionInstanceId:t,query:a,values:e??[]})},t}({});Object.defineProperty(window.__TAURI__,"tauriPluginSqlite",{value:__TAURI_PLUGIN_TAURI_PLUGIN_SQLITE__})}
